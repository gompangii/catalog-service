server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://192.168.56.41:8888
      request-connection-timeout: 5000  # 5초
      request-read-timeout: 5000   # 5초
      fail-fast: false   # 운영환경은 true로 설정, 컨피그 서버가 기동 되지 않아고 클라이언트 기동 가능
      retry:
        max-attempts: 6
        initial-interval: 1000  # 1초
        max-interval: 2000  # 2초
        multiplier: 1.1
  datasource:
    username: root
    password: mariadb
    url: jdbc:mariadb://192.168.56.40:3306/polardb_catalog
    hikari:
      connection-timeout: 2000 #ms
      maximum-pool-size: 5
  #sql:
  #  init:
  #    mode: always
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://192.168.56.41:8080/realms/PolarBookshop

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

info:
  env:
    enabled: true
  #system: Polar Bookshop

management:
  endpoints:
    web:
      exposure:
        include: flyway, health, info, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

polar:
  greeting: Welcome to the local book catalog!